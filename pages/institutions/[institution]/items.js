import MainLayout from '../../../components/layout/MainLayout'
import Head from 'next/head'
import Wrapper from '@/components/all-items/Wrapper'
import { API_URL } from '@/config/index'
import EachItem from '@/components/all-items/EachItem'
import { parseCookies } from '@/helpers/index'
import { PER_PAGE } from '@/config/index'
import Pagination from '@/components/layout/Pagination'

export default function items({ items, page, total, inst }) {
  return (
    <MainLayout>
      <Head>
        <title>{`Items for ${inst.institution_name}`}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Wrapper title={`Items for ${inst.institution_name}`}>
        {items.length !== 0 &&
          items.map((item) => <EachItem key={item.id} item={item} />)}
      </Wrapper>
      <Pagination page={page} total={total} pageName={items} />
    </MainLayout>
  )
}

export async function getServerSideProps({
  req,
  query: { page = 1 },
  query: { institution },
}) {
  const { token } = parseCookies(req)

  if (!token) {
    return {
      redirect: {
        destination: '/account/login',
        permanent: false,
      },
    }
  }

  const start = +page === 1 ? 0 : (+page - 1) * PER_PAGE

  // //   Fetch total count
  const totalRes = await fetch(`${API_URL}/items/count`, {
    method: 'GET',
    headers: {
      Authorization: `Bearer ${token}`,
    },
  })
  const total = await totalRes.json()

  const res = await fetch(
    // `${API_URL}/items?_sort=created_at:desc&_limit=${PER_PAGE}&_start=${start}&accepted=false`,
    `${API_URL}/items/inst/${institution}`,
    {
      method: 'GET',
      headers: {
        Authorization: `Bearer ${token}`,
      },
    },
  )
  const items = await res.json()

  const result = await fetch(
    // `${API_URL}/items?_sort=created_at:desc&_limit=${PER_PAGE}&_start=${start}&accepted=false`,
    `${API_URL}/institutions/${institution}`,
    {
      method: 'GET',
      headers: {
        Authorization: `Bearer ${token}`,
      },
    },
  )
  const inst = await result.json()

  return {
    props: {
      items,
      inst,
      page: +page,
      total,
    },
  }
}
