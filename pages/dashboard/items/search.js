import MainLayout from '../../../components/layout/MainLayout'
import Head from 'next/head'
import { useRouter } from 'next/router'
import Wrapper from '@/components/all-items/Wrapper'
import { API_URL } from '@/config/index'
import EachItem from '@/components/all-items/EachItem'
import qs from 'qs'
import { parseCookies } from 'helpers'

export default function SearchPage({ items }) {
  const router = useRouter()

  return (
    <MainLayout>
      <Head>
        <title>{`Searched for ${router.query.term}`}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Wrapper
        title={
          items.length !== 0
            ? `Search results for '${router.query.term}'`
            : `No items found`
        }
      >
        {items.map((item) => (
          <EachItem key={item.id} item={item} />
        ))}
      </Wrapper>
    </MainLayout>
  )
}

export async function getServerSideProps({ query: { term }, req }) {
  const { token } = parseCookies(req)

  if (!token) {
    return {
      redirect: {
        destination: '/login',
        permanent: false,
      },
    }
  }

  const query = qs.stringify({
    _where: {
      _or: [
        { name_contains: term },
        { description_contains: term },
        // { category_contains: term },
        { color_contains: term },
        { location_contains: term },
      ],
    },
  })

  const res = await fetch(`${API_URL}/items?${query}`, {
    method: 'GET',
    headers: {
      Authorization: `Bearer ${token}`,
    },
  })
  const items = await res.json()
  return {
    props: {
      items,
    },
  }
}
