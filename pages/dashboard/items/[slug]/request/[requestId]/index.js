import Head from 'next/head'
import { useRouter } from 'next/router'
import { useState } from 'react'
import { FaSave } from 'react-icons/fa'
import MainLayout from '@/components/layout/MainLayout'
import { API_URL } from '@/config/index'
import toast, { Toaster } from 'react-hot-toast'
import { parseCookies } from '@/helpers/index'

export default function RequestPage({ item, request, token }) {
  const [values, setValues] = useState({
    // description: request.description,
    // item: item.id,
  })

  const router = useRouter()

  const handleSubmit = async (e) => {
    e.preventDefault()
    // //validation
    const hasEmptyFields = Object.values(values).some(
      (element) => element === '',
    )
    if (hasEmptyFields) {
      toast.error('Please fill in all fields')
      return
    }
    // const res = await fetch(`${API_URL}/requests/${request.id}`, {
    //   method: 'PUT',
    //   headers: {
    //     'Content-Type': 'application/json',
    //     Authorization: `Bearer ${token}`,
    //   },
    //   body: JSON.stringify(values),
    // })
    // const data = await res.json()
    // if (!res.ok) {
    //   toast.error(data.message[0].messages[0].id)
    // } else {
    //   toast.success('Request successful')
    //   setTimeout(function () {
    //     router.push('/dashboard/items')
    //   }, 3000)
    // }
  }

  const handleInputChange = (e) => {
    // const { name, value } = e.target
    // setValues({ ...values, [name]: value })
  }

  return (
    <MainLayout>
      <Head>
        <title>{`Request`} </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Toaster position="top-center" reverseOrder={false} />
      <section className="text-gray-600 body-font relative">
        <div className="container px-5 py-10 mx-auto bg-white">
          <div className="lg:w-1/2 md:w-2/3 mx-auto sm:border border-gray-200 sm:p-10">
            <h1>Each Request Page</h1>
            <p>{request?.description}</p>
          </div>
        </div>
      </section>
    </MainLayout>
  )
}

export async function getServerSideProps({ req, params: { slug, requestId } }) {
  const { token } = parseCookies(req)

  if (!token) {
    return {
      redirect: {
        destination: '/login',
        permanent: false,
      },
    }
  }

  const reqs = await fetch(`${API_URL}/requests/${requestId}`, {
    method: 'GET',
    headers: {
      Authorization: `Bearer ${token}`,
    },
  })

  // const res = await fetch(`${API_URL}/items/${slug}`, {
  //   method: 'GET',
  //   headers: {
  //     Authorization: `Bearer ${token}`,
  //   },
  // })

  // const item = await res.json()
  const request = await reqs.json()

  return {
    props: {
      token,
      // item,
      request,
    },
  }
}
